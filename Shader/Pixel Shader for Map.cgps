#ifndef SampleWorkspace_StdMesh_Map_PS_cgps_h
#define SampleWorkspace_StdMesh_Map_PS_cgps_h

#include "APIAbstraction.gpu"
#include "StandardConstants.fx"
#include "StandardTextureResources.fx"
#include "samplerhelper.fx"
#include "lighthelper.fx"
#include "StdMesh_Structs.fx"

float4 StdMesh_Map_PS(STD_MESH_PS_IN pIn)
{
	//return make_float4(1.0, 0, 0, 1);
	float r = sample2D(gDiffuseMapSampler, pIn.iTexCoord, gDiffuseMap).r;
	float g = sample2D(gDiffuseMapSampler, pIn.iTexCoord, gDiffuseMap).g;
	float b = sample2D(gDiffuseMapSampler, pIn.iTexCoord, gDiffuseMap).b;
	float a = sample2D(gDiffuseMapSampler, pIn.iTexCoord, gDiffuseMap).a;
	float4 combinedColor = make_float4(r,g,b,a);
	combinedColor.a = ( combinedColor.r + combinedColor.g + combinedColor.b ) * 0.3333;  //Takes the combined color and clips whatever is less than 0.333
	
    clip(combinedColor.a - 0.00001);													 //Fine tuning to adjust the transparency
    
    combinedColor.a = 0.0;

    return combinedColor;
}

PS_wrapper_STD_MESH(StdMesh_Map_PS)

#endif
